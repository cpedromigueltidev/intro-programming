- Inicializar un repositorio.
$ cd your_folder/
$ git init

- Mostrar estado actual de tu repositorio.
$ cd your_folder/
$ git status

- Seleccionar archivos untracked para pasarlos a la etapa "STAGE"
$ cd your_folder/
-- para un archivo especifico:                $ git add your_file.extension
-- para varios archivos especificos:          $ git add your_file_1.extension your_file_2.extension
-- para todos los archivos de una extension:  $ git add *.extension
-- para todos los archivos y sub directorios  $ git add .
-- Verificar si esta ultima opcion es necesaria o favorable.

- Selecconar archivos en la etapa "STAGE" y comprometer el trabajo es decir hacer "COMMIT"
$ cd your_folder/
$ git status
$ git commit -m "COMENTARIO CON SIGNIFICADO DEL CAMBIO"
-- todos tus archivos en stage ahora estan en commit, y verifica con:
$ git status
- Otra forma es, para lo cual te abrira tu editor predeterminado para escribir y guardar tu comentario y cierras.
$ git commit

- Eliminando un archivo del repositorio. Puedes eliminar por el explorador de archivos o por la misma consola de git bash asi:
$ ls
$ rm your_file
-- Luego verifica que no esta el arhivo con un ls.
-- y luego verifica tu respositorio para pasarlo a stage y despues al commit:
$ git status
$ git add your_file_deleted
$ git commit -m "Eliminando archivo ya no necesario"
-- Otra forma de eliminar mas rapido saltando el paso de git add es:
$ git rm your_file
$ git commit -m "Eliminando archivo ya no necesario"

- Recuperar archivos borrados en etapa stage.
$ git status
$ git restore your_file_deleted
$ git status

- Renombrar archivos. Puedes renombrar archivos por el explorador de archivos o por la misma consola de git bash asi:
$ ls
$ mv your_file your_file2
$ git status
$ git add your_file your_file2
$ git status
$ git commit -m "renombrando arhivo"
-- Otra forma de renombrar mas rapido saltando el paso de git add es:
$ git mv your_file2 your_file
$ git commit -m "Devolviendo nombre original del archivo"

- Ingnorar archivos para que no sean subidos al repositorio de Git.
-- En el repositorio local crear al archivo .gitignore.
-- En el archivo .gitignore agrega en cada linea el nombre de o los archivos que quieres que git ignore, gurada y cierra-
-- Al ejecutar git estatus, deberias ver solo el archivo .ignore y no los archivos en detalle a ignorar.
$ ls
$ git status
-- otra opcion para ver el estatus mas resumido es:
$ git status -s

- Ver los cambios en los archivos de tu repositorio.
-- Para ver en repositorio: $git diff
-- Para ver en stage:       $git diff --stage

- Ver el historial de cambios en tu repositorio.
-- Con detalle: $ git log
-- En resumen:  $ git log --oneline
